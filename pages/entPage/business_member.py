import datetimefrom common.op_windows import member_file, OpWindowsfrom common.readelement import Elementfrom common.sendDingTalk import SendDingTalkfrom common.interface import Interfacefrom model.entModel.entMemberModel import EntMemberManageModelfrom model.entModel.entIndexModel import EntIndexModelpage_ele = Element('business_member')op = OpWindows()phone = OpWindows.RandomPnum(op)email = OpWindows.RandomEmail(op)class BussinessMember(EntMemberManageModel,EntIndexModel):    # 进入成员管理列表    def act_member_manage(self):        try:            self.click_manage()            self.click_member_manage()        except Exception as e:            self.logger.error('企业-成员管理--进入成员管理列表失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--进入成员管理列表失败")            raise e    # 验证进入成员管理里修改团队名称    def test_edit_temp_name(self):        try:            self.click_edit()            time = datetime.datetime.now().strftime('%Y%m%d%H%M')            self.clear_temp_name()            self.input_temp_name("我的爱设计团队" + str(time))            self.click_temp_name_sure_btn()            # 断言            temp_name = self.get_temp_name()            assert temp_name == "我的爱设计团队"+ str(time)            self.logger.info("团队名称  修改完成")        except Exception as e:            self.logger.error('企业-成员管理--修改团队名称失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--修改团队名称失败")            raise e    # 验证进入成员管理里邀请成员    def test_invite_member(self):        try:            self.click_invite_member_btn()            self.sleep(1)            link = self.get_invite_link()            self.click_copy_link_btn()            attr = self.get_copy_link_btn_attr()            print("link:",link)            print("attr:",attr)            assert "invite" in link            assert "background: rgb(42, 177, 57);" in attr            self.click_invite_link_close_btn()        except Exception as e:            self.logger.error('企业-成员管理--邀请成员失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--邀请成员失败")            raise e    # 测试发送邀请链接    def  test_send_invite_link(self):        try:            self.click_invite_member_btn()            self.sleep(1)            link = self.get_invite_link()            self.logger.info("最初获取到邀请链接:%s"%link)            # 点击发送链接            self.click_send_invite_link()            self.sleep(1)            link_new = self.get_invite_link()            self.sleep(1)            self.click_invite_link_close_btn()            self.logger.info("获取到新邀请链接:%s"%link_new)            assert link != link_new        except Exception as e:            self.logger.error('企业-成员管理--发送邀请链接失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--发送邀请链接失败")            raise e    # 验证添加一个成员    def test_add_one_member(self):        try:            member_num_list = Interface().get_temp_member_num()            current_team_members_canuse = member_num_list[1] # 获取到当前团队成员个数            print("current_team_members_canuse:",current_team_members_canuse)            self.click_add_member() # 点击添加成员            self.sleep(1)            self.click_add_one_member() # 点击单个成员            self.sleep(1)            self.input_phone(phone)            self.sleep(1)            self.input_email(email)            self.input_remark("测试测试")            self.click_sure_add_btn()            self.sleep(1)            member_num_list = Interface().get_temp_member_num()            self.sleep(2)            current_team_members_canuse2 = member_num_list[1] # 获取到当前团队成员个数            num = int(current_team_members_canuse)- int(current_team_members_canuse2)            self.sleep(1)            assert num == 1        except Exception as e:            self.logger.error('企业-成员管理--添加一个成员失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--添加一个成员失败")            raise e    # 验证添加多个成员    def test_add_more_member(self):        try:            member_num_list = Interface().get_temp_member_num()            current_team_members_canuse = member_num_list[1] # 获取到当前团队剩余成员个数            self.click_add_member() # 点击添加成员            self.sleep(1)            self.click_add_more_member() # 点击多个成员            self.sleep(2)            self.download_xls()            self.sleep(2)            self.upload_xls()            OpWindows.file_upload(member_file)            self.sleep(2)            tips = self.get_upload_xls_succ() #获取导出成功提示            assert tips == "导入成功"            text = self.get_upload_xls_num() # 获取上传xls成功导出成员个数            suc_num = str(text[3:-3]).strip()            self.closed_upload_alert()            self.sleep(2)            member_num_list = Interface().get_temp_member_num()            current_team_members_canuse2 = member_num_list[1] # 获取到当前团队剩余成员个数            num = int(current_team_members_canuse)- int(current_team_members_canuse2)            self.sleep(1)            assert num == int(suc_num)        except Exception as e:            self.logger.error('企业-成员管理--添加多个成员失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--添加多个成员失败")            raise e    # 验证编辑成员    def test_edit_member(self,new_remark):        try:            member_num_list = Interface().get_temp_member_num()            if int(member_num_list[0]) - int(member_num_list[1]) >=0:                self.sleep(2)                self.edit_member()                self.clear_remark()                self.input_remark(new_remark)                self.click_sure_add_btn() # 确定按钮                # 获取最后一条的备注                remark = self.get_last_remark_text()                assert remark == new_remark        except Exception as e:            self.logger.error('企业-成员管理--编辑成员失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--编辑成员失败")            raise e    # 验证移除成员    def test_remove_member(self):        try:            member_num_list = Interface().get_temp_member_num()            current_team_members_canuse = member_num_list[1] # 获取到当前团队成员剩余个数            num = int(member_num_list[0]) - int(member_num_list[1])            if num > 10:                while num > 10:                    member_num_list = Interface().get_temp_member_num()                    current_team_members_canuse = member_num_list[1] # 获取到当前团队成员个数                    self.move_member()                    self.sleep(1)                    self.srue_move_member()                    member_num_list = Interface().get_temp_member_num()                    self.sleep(1)                    current_team_members_canuse2 = member_num_list[1] # 获取到当前团队成员个数                    member_num = int(current_team_members_canuse2) - int(current_team_members_canuse)                    self.sleep(1)                    assert member_num == 1                    num -= 1            elif num <= 10:                if int(member_num_list[0]) - int(member_num_list[1])>=2:                    self.move_member()                    self.sleep(1)                    self.srue_move_member()                    member_num_list = Interface().get_temp_member_num()                    self.sleep(1)                    current_team_members_canuse2 = member_num_list[1] # 获取到当前团队成员个数                    num = int(current_team_members_canuse2) - int(current_team_members_canuse)                    self.sleep(1)                    assert num == 1                else:                    SendDingTalk().sendDingTalkMsg("企业-成员管理--成员小于2个，不执行删除")        except Exception as e:            self.logger.error('企业-成员管理--移除成员失败%s' % repr(e))            SendDingTalk().sendDingTalkMsg("企业-成员管理--移除成员失败")            raise e